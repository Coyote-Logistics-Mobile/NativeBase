{"version":3,"sources":["../../../src/basic/IconNB.js"],"names":["Icomoon","icoMoonConfig","IconNB","props","context","setIcon","type","theme","nextProps","c","_root","iconType","undefined","customIconSet","themeStyle","variables","iconFamily","iconSet","Icon","AntDesign","Entypo","EvilIcons","Feather","FontAwesome","FontAwesome5","Fontisto","Foundation","Ionicons","MaterialCommunityIcons","MaterialIcons","Octicons","SimpleLineIcons","Zocial","setRoot","React","PureComponent","contextTypes","PropTypes","object","propTypes","oneOf","StyledIconNB","mapPropsToStyleNames"],"mappings":"u1BAAA,4B,2CACA,qC,mDACA,iEACA,8BACA,8D,mDACA,wD,6CACA,8D,mDACA,0D,+CACA,kE,uDACA,oE,wDACA,4D,iDACA,gE,qDACA,4D,iDACA,wF,6EACA,sE,2DACA,4D,iDACA,0E,+DACA,wD,6CACA,iEAEA,uD,mDACA,mE,08BAEA,GAAMA,SAAU,qDAAyBC,mBAAzB,CAAhB,C,GAEMC,O,uEAKJ,gBAAYC,KAAZ,CAAmBC,OAAnB,CAA4B,oIACpBD,KADoB,GAE1B,MAAKE,OAAL,CAAaF,MAAMG,IAAnB,CAAyBF,SAAWA,QAAQG,KAA5C,EAF0B,aAG3B,C,iGAG0BC,S,CAAW,CACpC,GAAIA,UAAUF,IAAV,EAAkB,KAAKH,KAAL,CAAWG,IAAX,GAAoBE,UAAUF,IAApD,CAA0D,CACxD,KAAKD,OAAL,CAAaG,UAAUF,IAAvB,EACD,CACF,C,wCAEOG,C,CAAE,CACR,KAAKC,KAAL,CAAaD,CAAb,CACD,C,wCAEOE,Q,CAAUJ,K,CAAO,CACvB,GAAII,WAAaC,SAAb,EAA0BL,QAAUK,SAApC,EAAiD,gBAAI,IAAJ,CAAU,eAAV,CAArD,CAAiF,CAE/EL,MAAQ,gBAAI,IAAJ,CAAU,eAAV,CAAR,CACD,CACD,GAAIM,qBAAJ,CACA,GAAIF,WAAaC,SAAb,EAA0BL,QAAUK,SAAxC,CAAmD,CACjD,GAAME,YAAaP,MAAM,4BAAN,CAAnB,CAEAI,SAAWG,WAAWC,SAAX,CAAqBC,UAAhC,CACAH,cAAgBC,WAAWC,SAAX,CAAqBE,OAArC,CACD,CACD,OAAQN,QAAR,EACE,IAAK,WAAL,CACE,KAAKO,IAAL,CAAYC,mBAAZ,CACA,MACF,IAAK,QAAL,CACE,KAAKD,IAAL,CAAYE,gBAAZ,CACA,MACF,IAAK,WAAL,CACE,KAAKF,IAAL,CAAYG,mBAAZ,CACA,MACF,IAAK,SAAL,CACE,KAAKH,IAAL,CAAYI,iBAAZ,CACA,MACF,IAAK,aAAL,CACE,KAAKJ,IAAL,CAAYK,qBAAZ,CACA,MACF,IAAK,cAAL,CACE,KAAKL,IAAL,CAAYM,qBAAZ,CACA,MACF,IAAK,UAAL,CACE,KAAKN,IAAL,CAAYO,kBAAZ,CACA,MACF,IAAK,YAAL,CACE,KAAKP,IAAL,CAAYQ,oBAAZ,CACA,MACF,IAAK,SAAL,CACE,KAAKR,IAAL,CAAYlB,OAAZ,CACA,MACF,IAAK,UAAL,CACE,KAAKkB,IAAL,CAAYS,kBAAZ,CACA,MACF,IAAK,wBAAL,CACE,KAAKT,IAAL,CAAYU,gCAAZ,CACA,MACF,IAAK,eAAL,CACE,KAAKV,IAAL,CAAYW,uBAAZ,CACA,MACF,IAAK,UAAL,CACE,KAAKX,IAAL,CAAYY,kBAAZ,CACA,MACF,IAAK,iBAAL,CACE,KAAKZ,IAAL,CAAYa,yBAAZ,CACA,MACF,IAAK,QAAL,CACE,KAAKb,IAAL,CAAYc,gBAAZ,CACA,MACF,QACE,KAAKd,IAAL,CAAYL,eAAiBc,kBAA7B,CA/CJ,CAiDD,C,uCAEQ,CACP,MAAO,oCAAM,IAAN,WAAW,IAAK,KAAKM,OAArB,EAAkC,KAAK9B,KAAvC,oDAAP,CACD,C,oBAtFkB+B,gBAAMC,a,EAArBjC,M,CACGkC,Y,CAAe,CACpB7B,MAAO8B,oBAAUC,MADG,C,CAwFxBpC,OAAOqC,SAAP,CAAmB,CACjBjC,KAAM+B,oBAAUG,KAAV,CAAgB,CACpB,WADoB,CAEpB,QAFoB,CAGpB,WAHoB,CAIpB,SAJoB,CAKpB,aALoB,CAMpB,cANoB,CAOpB,UAPoB,CAQpB,YARoB,CASpB,SAToB,CAUpB,UAVoB,CAWpB,wBAXoB,CAYpB,eAZoB,CAapB,UAboB,CAcpB,iBAdoB,CAepB,QAfoB,CAAhB,CADW,CAAnB,CAoBA,GAAMC,cAAe,yCACnB,mBADmB,CAEnB,EAFmB,CAGnBC,8BAHmB,EAInBxC,MAJmB,CAArB,C,QAMyBA,M,CAAhBuC,Y","file":"IconNB.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connectStyle } from 'native-base-shoutem-theme';\nimport { get } from 'lodash';\nimport AntDesign from 'react-native-vector-icons/AntDesign';\nimport Entypo from 'react-native-vector-icons/Entypo';\nimport EvilIcons from 'react-native-vector-icons/EvilIcons';\nimport Feather from 'react-native-vector-icons/Feather';\nimport FontAwesome from 'react-native-vector-icons/FontAwesome';\nimport FontAwesome5 from 'react-native-vector-icons/FontAwesome5';\nimport Fontisto from 'react-native-vector-icons/Fontisto';\nimport Foundation from 'react-native-vector-icons/Foundation';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons';\nimport Octicons from 'react-native-vector-icons/Octicons';\nimport SimpleLineIcons from 'react-native-vector-icons/SimpleLineIcons';\nimport Zocial from 'react-native-vector-icons/Zocial';\nimport { createIconSetFromIcoMoon } from 'react-native-vector-icons';\n\nimport icoMoonConfig from '../basic/Icon/selection.json';\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\n\nconst Icomoon = createIconSetFromIcoMoon(icoMoonConfig);\n\nclass IconNB extends React.PureComponent {\n  static contextTypes = {\n    theme: PropTypes.object,\n  };\n\n  constructor(props, context) {\n    super(props);\n    this.setIcon(props.type, context && context.theme);\n  }\n\n  // eslint-disable-next-line camelcase\n  UNSAFE_componentWillUpdate(nextProps) {\n    if (nextProps.type && this.props.type !== nextProps.type) {\n      this.setIcon(nextProps.type);\n    }\n  }\n\n  setRoot(c){\n    this._root = c;\n  }\n\n  setIcon(iconType, theme) {\n    if (iconType === undefined && theme === undefined && get(this, 'context.theme')) {\n      // eslint-disable-next-line\n      theme = get(this, 'context.theme');\n    }\n    let customIconSet;\n    if (iconType === undefined && theme !== undefined) {\n      const themeStyle = theme['@@shoutem.theme/themeStyle'];\n      // eslint-disable-next-line\n      iconType = themeStyle.variables.iconFamily;\n      customIconSet = themeStyle.variables.iconSet;\n    }\n    switch (iconType) {\n      case 'AntDesign':\n        this.Icon = AntDesign;\n        break;\n      case 'Entypo':\n        this.Icon = Entypo;\n        break;\n      case 'EvilIcons':\n        this.Icon = EvilIcons;\n        break;\n      case 'Feather':\n        this.Icon = Feather;\n        break;\n      case 'FontAwesome':\n        this.Icon = FontAwesome;\n        break;\n      case 'FontAwesome5':\n        this.Icon = FontAwesome5;\n        break;\n      case 'Fontisto':\n        this.Icon = Fontisto;\n        break;\n      case 'Foundation':\n        this.Icon = Foundation;\n        break;\n      case 'Icomoon':\n        this.Icon = Icomoon;\n        break;\n      case 'Ionicons':\n        this.Icon = Ionicons;\n        break;\n      case 'MaterialCommunityIcons':\n        this.Icon = MaterialCommunityIcons;\n        break;\n      case 'MaterialIcons':\n        this.Icon = MaterialIcons;\n        break;\n      case 'Octicons':\n        this.Icon = Octicons;\n        break;\n      case 'SimpleLineIcons':\n        this.Icon = SimpleLineIcons;\n        break;\n      case 'Zocial':\n        this.Icon = Zocial;\n        break;\n      default:\n        this.Icon = customIconSet || Ionicons;\n    }\n  }\n\n  render() {\n    return <this.Icon ref={this.setRoot} {...this.props} />;\n  }\n}\n\nIconNB.propTypes = {\n  type: PropTypes.oneOf([\n    'AntDesign',\n    'Entypo',\n    'EvilIcons',\n    'Feather',\n    'FontAwesome',\n    'FontAwesome5',\n    'Fontisto',\n    'Foundation',\n    'Icomoon',\n    'Ionicons',\n    'MaterialCommunityIcons',\n    'MaterialIcons',\n    'Octicons',\n    'SimpleLineIcons',\n    'Zocial',\n  ]),\n};\n\nconst StyledIconNB = connectStyle(\n  'NativeBase.IconNB',\n  {},\n  mapPropsToStyleNames\n)(IconNB);\n\nexport { StyledIconNB as IconNB };"]}